name: 2 Homolog

on:
  push:
    branches:
      - develop
    paths:
      - 'src/**'
      - 'docker/**'
      
env:
  MASTER_DEPLOY_KEY: ${{ secrets.MASTER_DEPLOY_KEY }}
  AWS_SECRET_ID: ${{ secrets.AWS_SECRET_ID }}
  AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_HOMOLOG }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_HOMOLOG }}
  GHCR_TOKEN: ${{ secrets.GHCR_TOKEN }}
  GHCR_USER: ${{ secrets.GHCR_USER }}
  CI_PIPELINE_ID: ${{ github.run_id }}

jobs:

  build:

    if: github.actor != 'devops-maistodos'

    defaults:
      run:
        shell: bash

    name: Build Image ECR Homolog
    environment: homolog
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/maistodos/kitkat:latest
      credentials:
        username: ${{ secrets.GHCR_USER }}
        password: ${{ secrets.GHCR_TOKEN }}

    services:
      docker:
        image: docker:20.10.8-dind

    steps:

      - name: Checkout
        uses: actions/checkout@v4

      - name: Running Build Image ECR
        run: |
          source /kitkat/ci/inject_env.sh
          source /kitkat/ci/github/ssh_auth.sh
          source ./ci/build_image.sh

  eventbrigde:

    defaults:
      run:
        shell: bash

    name: Create or Destroy CloudFormation
    environment: homolog
    runs-on: ubuntu-latest
    needs: build

    container:
      image: ghcr.io/maistodos/kitkat:latest
      credentials:
        username: ${{ secrets.GHCR_USER }}
        password: ${{ secrets.GHCR_TOKEN }}

    steps:

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GHCR_TOKEN }}

      - name: Verify and Apply
        run: |
          #
          source /kitkat/ci/inject_env.sh
          git config --global --add safe.directory /__w/banking.credit-jobs/banking.credit-jobs

          # Exibir e fazer o Deploy no CloudFormation dos arquivos que foram adicionados/modificados
          echo "LIST OF FILES FOR ADD / MODIFY!"
          echo "---------------------------------------------------------------------"
          for file in $(git diff --name-only --diff-filter=ACMRT HEAD^ -- src/cloudformation/); do
            echo "Deploying File: $(basename $file .yaml)"
            aws cloudformation deploy \
              --template-file $file \
              --stack-name "$(basename $file .yaml)-Banking-trans-sched-jobs" \
              --parameter-overrides \
                JobQueueName=${JOB_QUEUE_NAME} \
                JobDefinitionName=${JOB_DEFINITION_NAME} \
                ExistingEventBridgeRoleArn=${EXECUTION_ROLE_ARN}
            echo "---------------------------------------------------------------------"
          done

          # Exibir os arquivos que foram exclu√≠dos e Deletar a Stack no CloudFormation
          echo "LIST OF FILES FOR DESTROY!"
          echo "---------------------------------------------------------------------"
          for deleted_file in $(git diff --name-only --diff-filter=D HEAD^ -- src/cloudformation/); do
            echo "Destroing File: $(basename $deleted_file .yaml)"
            aws cloudformation delete-stack \
              --stack-name "$(basename $deleted_file .yaml)-Banking-trans-sched-jobs"
            echo "---------------------------------------------------------------------"
          done